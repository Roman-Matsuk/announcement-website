{"version":3,"sources":["components/Header/Header.js","components/Announcement/Announcement.js","components/AnnouncementsList/AnnouncementsList.js","components/NewAnnouncementForm/NewAnnouncementForm.js","components/AnnouncementDetails/AnnouncementDetails.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Announcement","announcement","setShowDetails","setAnnouncementId","title","onClick","id","AnnouncementsList","announcements","typeList","map","NewAnnouncementForm","setAnnouncements","seIsNewAnnouncement","useState","setTitle","description","setDescription","onSubmit","event","preventDefault","newAnnouncement","uuidv4","dateAdded","Date","prev","htmlFor","type","value","onChange","target","rows","AnnouncementDetails","announcementId","isEdit","setIsEdit","newTitle","setNewTitle","newDescription","currentAnnouncement","setCurrentAnnouncement","similarAnnouncements","setSimilarAnnouncements","useEffect","find","ann","similar","filter","ancmnt","ancmntTitleArr","split","announcementTitleArr","ancmntDescArr","announcementDescArr","i","length","includes","handleAnnouncementChange","handleDelete","moment","fromNow","App","query","setQuery","isNewAnnouncement","showDetails","filterAnnouncements","filteredAnnouncements","movie","toLowerCase","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df2ba927.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Header.scss';\n\nexport const Header = () => {\n  return (\n    <header className=\"header header--parameters\">\n      <h1 className=\"header__title\">Announcement Website</h1>\n    </header>\n  )\n};\n\n// export default Header;","import React from 'react';\n\nimport './Announcement.scss';\n\nexport const Announcement = ({ announcement, setShowDetails, setAnnouncementId }) => {\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__body\">\n        <h3 className=\"card__title\">\n           {announcement.title}\n        </h3>\n        <button\n          className=\"card__button button\"\n          onClick={() => {\n            setAnnouncementId(announcement.id);\n            setShowDetails(true);\n          }}\n        >\n          See more\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Announcement } from '../Announcement/';\n\nimport './AnnouncementList.scss';\n\nexport const AnnouncementsList = ({ announcements, setShowDetails, setAnnouncementId, typeList }) => {\n  return (\n    <div className={`announcements announcements--${typeList}`}>\n      {announcements.map(announcement => (\n        <Announcement\n          key={announcement.id}\n          announcement={announcement}\n          setShowDetails={setShowDetails}\n          setAnnouncementId={setAnnouncementId}\n        />\n      ))}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './NewAnnouncementForm.scss';\n\nconst NewAnnouncementForm = ({ setAnnouncements, seIsNewAnnouncement }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const createAnnouncement = (event) => {\n    event.preventDefault();\n    const newAnnouncement = {\n      id: uuidv4(),\n      title,\n      description,\n      dateAdded: new Date(),\n    };\n\n    setAnnouncements(prev => [...prev, newAnnouncement]);\n    setTitle('');\n    setDescription('');\n  }\n\n  return (\n    <form\n      onSubmit={createAnnouncement}\n      className=\"form\"\n    >\n      <h2 className=\"form__title\">New Announcement</h2>\n      <div className=\"form__fields\">\n        <label htmlFor=\"title\" className=\"form__label\">\n          Title\n        </label>\n        <input\n          type=\"text\"\n          className=\"input form__input\"\n          id=\"title\"\n          value={title}\n          onChange={event => setTitle(event.target.value)}\n        />\n      </div>\n      <div className=\"form__fields\">\n        <label htmlFor=\"description\" className=\"form__label\">\n          Description\n        </label>\n        <textarea\n          className=\"form__text textarea\"\n          id=\"description\"\n          rows=\"3\"\n          value={description}\n          onChange={event => setDescription(event.target.value)}\n        />\n      </div>\n      <button\n        type=\"button\"\n        className=\"button form__button\"\n        onClick={() => seIsNewAnnouncement(false)}\n      >\n        Back\n      </button>\n      <button\n        className=\"button form__button\"\n        type=\"submit\"\n      >\n        Create\n      </button>\n    </form>\n  );\n}\n\nexport default NewAnnouncementForm;","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\n\nimport { AnnouncementsList } from '../AnnouncementsList/';\n\nimport './AnnouncementDetails.scss';\n\nexport const AnnouncementDetails = ({\n  announcementId,\n  setShowDetails,\n  setAnnouncements,\n  announcements,\n  setAnnouncementId\n}) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [newTitle, setNewTitle] = useState('');\n  const [newDescription, setDescription] = useState('');\n  const [currentAnnouncement, setCurrentAnnouncement] = useState({});\n  const [similarAnnouncements, setSimilarAnnouncements] = useState([]);\n\n  useEffect(() => {\n    const announcement = announcements.find(ann => ann.id === announcementId)\n    const similar = announcements.filter(ancmnt => {\n      const ancmntTitleArr = ancmnt.title.split(' ');\n      const announcementTitleArr = announcement.title.split(' ');\n      const ancmntDescArr = ancmnt.description.split(' ');\n      const announcementDescArr = announcement.description.split(' ');\n\n      for (let i = 0; i < announcementTitleArr.length; i++) {\n        if (ancmntTitleArr.includes(announcementTitleArr[i]) && ancmnt.id !== announcement.id) {\n          return ancmnt;\n        }\n      }\n\n      for (let i = 0; i < announcementDescArr.length; i++) {\n        if (ancmntDescArr.includes(announcementDescArr[i]) && ancmnt.id !== announcement.id) {\n          return ancmnt;\n        }\n      }\n    });\n    \n    if (similar.length > 0) {\n      similar.length = 3;\n    }\n\n    setCurrentAnnouncement(announcement);\n    setNewTitle(announcement.title);\n    setDescription(announcement.description);\n\n    setSimilarAnnouncements(similar);\n  }, [announcementId, announcements]);\n\n  const handleAnnouncementChange = () => {\n    setAnnouncements(prev => {\n      return  prev.map(ann => {\n        if (ann.id === announcementId) {\n          ann.title = newTitle;\n          ann.description = newDescription;\n        }\n\n        return ann;\n      });\n    });\n    setIsEdit(false);\n  }\n\n  const handleDelete = () => {\n    setAnnouncements(prev => prev.filter(announcement => announcement.id !== announcementId));\n    setShowDetails(false);\n  }\n\n  const render = () => {\n    if (isEdit) {\n      return (\n        <div className=\"details\">\n          <div className=\"details__header\">\n            <input\n              type=\"text\"\n              value={newTitle}\n              onChange={(event) => setNewTitle(event.target.value)}\n              className=\"details__title input\"\n            />\n            <div className=\"details__buttons details__buttons--edit\">\n            <button\n              onClick={handleAnnouncementChange}\n              className = \"button\"\n            >\n              Save\n            </button>\n            <button\n              onClick={() => setIsEdit(false)}\n              className = \"button\"\n            >\n              Cancel\n            </button>\n          </div>\n          </div>\n          <p className=\"details__date\">\n            {`Added ${moment(currentAnnouncement.dateAdded, \"YYYYMMDD\").fromNow()}`}\n          </p>\n          <textarea\n            value={newDescription}\n            onChange={(event) => setDescription(event.target.value)}\n            className=\"details__description textarea\"\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"details\">\n        <div className=\"details__header\">\n          <h2 className=\"details__title\">{currentAnnouncement.title}</h2>\n          <div className=\"details__buttons\">\n            <button\n              className = \"button\"\n              onClick={() => {\n                setShowDetails(false);\n              }}\n            >\n              Back\n            </button>\n            <button\n              onClick={() => setIsEdit(true)}\n              className = \"button\"\n            >\n              Edit\n            </button>\n            <button\n              onClick={handleDelete}\n              className = \"button\"\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n        <p className=\"details__date\">\n          {`Added ${moment(currentAnnouncement.dateAdded, \"YYYYMMDD\").fromNow()}`}\n        </p>\n        <p className=\"details__description\">{currentAnnouncement.description}</p>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      {render()}\n      {(similarAnnouncements.length > 0)\n        && <h3 className=\"details__similar\">Similar announcements</h3>\n      }\n      <AnnouncementsList\n        announcements={similarAnnouncements}\n        setShowDetails={setShowDetails}\n        setAnnouncementId={setAnnouncementId}\n        typeList=\"three\"\n      />\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.scss';\n\nimport { Header } from './components/Header/';\nimport { AnnouncementsList } from './components/AnnouncementsList/';\nimport NewAnnouncementForm from './components/NewAnnouncementForm/NewAnnouncementForm';\nimport { AnnouncementDetails } from './components/AnnouncementDetails/';\n\nfunction App() {\n  const [announcements, setAnnouncements] = useState([\n    {\n      title: 'Announcement #1',\n      description: 'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Placeat excepturi nisi facilis. Ab veniam maxime tempora. Dolore esse quidem quam nisi consequatur magni quia aliquam, dolores quod? Saepe, exercitationem unde?',\n      dateAdded: new Date(),\n      id: uuidv4(),\n    },\n    {\n      title: 'Announcement #2',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Explicabo, unde? ',\n      dateAdded: new Date(),\n      id: uuidv4(),\n    },\n  ]);\n  const [query, setQuery] = useState('');\n  const [isNewAnnouncement, seIsNewAnnouncement] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n  const [announcementId, setAnnouncementId] = useState('');\n\n  const filterAnnouncements = (event) => {\n    setQuery(event.target.value);\n  }\n\n  const filteredAnnouncements = announcements\n    .filter(movie => movie.title.toLowerCase().includes(query.toLowerCase()));\n\n  \n  const render = () => {\n    if (showDetails) {\n      return (\n        <AnnouncementDetails\n          announcementId={announcementId}\n          setShowDetails={setShowDetails}\n          setAnnouncements={setAnnouncements}\n          announcements={announcements}\n          setAnnouncementId={setAnnouncementId}\n        />\n      )\n    } else {\n      return (\n        <>\n          {isNewAnnouncement\n            ? <NewAnnouncementForm\n                setAnnouncements={setAnnouncements}\n                seIsNewAnnouncement={seIsNewAnnouncement}\n              />\n            : <>\n                <div className=\"app__options\">\n                  <input\n                    className=\"input app__serch\"\n                    type=\"text\"\n                    value={query}\n                    onChange={filterAnnouncements}\n                    placeholder=\"Search announcements\"\n                  />\n                  <button\n                    className=\"button button--large\"\n                    onClick={() => seIsNewAnnouncement(true)}\n                  >\n                    Add Announcement\n                  </button>\n                </div>\n                <AnnouncementsList\n                  announcements={filteredAnnouncements}\n                  setShowDetails={setShowDetails}\n                  setAnnouncementId={setAnnouncementId}\n                  typeList=\"four\"\n                />\n              </>\n          }\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"app\">\n        {render()}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  // document.body\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}